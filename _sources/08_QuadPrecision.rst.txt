
四精度测试示例
==============

非常细瘦的三角形的面积
----------------------

下面是一个经典的“瘦三角形”问题，取自 David Goldberg 所著的《What Every
Computer Scientist Should Know About Floating-Point Arithmetic》，发表在
1991 年 3 月的《Computing Surveys》上：

.. raw:: html

   <table border="4">

.. raw:: html

   <tr>

.. raw:: html

   <td bgcolor="lightblue">

当三角形两条边b和c加起来仅比最长边a略长时，求三角形的面积A。具体来说，其中两条边比最长边的一半大3个ULP。

.. raw:: html

   </td>

.. raw:: html

   </tr>

.. raw:: html

   </table>

.. figure:: assets/image-20230716213427377.png

   image-20230716213427377

可以把它想象成炎热阳光下的路面弯曲。 面积 A 的经典公式使用临时值 s：

.. math::


   s=\frac{a+b+c}{2}; A=\sqrt{s(s-a)(s-b)(s-c)}

细三角形公式的问题在于 s 非常接近 a 的值，并且 s 的计算会累积两个
ULP的舍入误差 … ，因此相对误差被放大得尽可能严重想象。 我们想要测试
posits 在高精度上超越浮点数的能力，所以我们将把边做成

.. math::


   \begin{array}{l}
   a=7 \\
   b=c=7+3 \times 2^{-111}
   \end{array}

这些是 IEEE 四精度（128 位）浮点数可以精确表达的值。
假设所有值都以光年为单位。 b 边和 c 边比 a 的一半大了仅约质子直径的
1/200，但这足以使三角形达到约 85 厘米的高度，即标准门洞的宽度！
让我们使用面积公式和 Mathematica
扩展精度有理值来看看面积的正确值是多少（以平方光年为单位），精确到 40
位小数：

.. figure:: assets/image-20230716220602633.png

   image-20230716220602633

这以平方光年为单位，是一个很难想象的数量。 面积约为地球表面积的55倍。

用 IEEE 四精度浮点算瘦三角形面积
--------------------------------

IEEE四精度使用15位指数，因此我们可以设置浮点环境并检查动态范围，如下所示：

.. figure:: assets/image-20230716220731335.png

   image-20230716220731335

这是使用浮点做计算，使用下划线表示其上方的浮点版本。
也就是说，下划线将其下划线的任何内容四舍五入为最接近的浮点数。

.. figure:: assets/image-20230716220844891.png

   image-20230716220844891

其错误率超过 15%，考虑到 IEEE 四精度的精度约为 33
位小数，这是一个巨大的错误。 将不正确的数字涂成橙色，浮点数显示如下

.. math::


   3.\color{orange}63481490842332134725920516158057683\color{black} \times 10^{-16}

换句话说，它只有一位小数正确了。
由于测量单位是平方光年，误差大约与海王星的表面积一样大。

用posit算瘦三角形面积：不平等的比拼
-----------------------------------

现在尝试使用 posits，只需使用上划线而不是下划线即可。 选择 es=7 为 posit
环境提供了与 IEEE 128 位浮点（四精度）非常相似的动态范围：

.. figure:: assets/image-20230716221221066-16895184590791.png

   image-20230716221221066

如果用橙色涂写错误符号，结果是

.. math::


   3.147842048749004252358852654945507744\color{orange}39\color{black} \times 10^{-16}

这个超精确的答案（精确到小数点后 37 位）可以转换为 16
位posit数，且仍然比 128 位浮点结果具有更高的精度。
